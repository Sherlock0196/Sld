import React, {Component, PropTypes} from 'react';
import RichTextEditor from 'react-rte';
import userStore from '../stores/userStore.js';



class Note extends Component {
  static propTypes = {
    onChange: PropTypes.func
  };

  componentWillMount() {
    this.onChange = this.onChange.bind(this)
    userStore.listen(this.onChange)
  }

  componentWillUnmount() {
    userStore.unlisten(this.onChange)
  }

  onChange(state) {
    this.setState(state)
  }


  state = {
    value: RichTextEditor.createEmptyValue()
  }

  onChange = (value) => {
    this.setState({value});
    if (this.props.onChange) {
      // Send the changes up to the parent component as an HTML string.
      // This is here to demonstrate using `.toString()` but in a real app it
      // would be better to avoid generating a string on each change.
      this.props.onChange(
        value.toString('html')
      );
    }
  };
  
  submitEntry = (e) => {
    e.preventDefault();
    var entry = this.state.value;
    console.log(entry);
    var data = {
      entry: entry,
      user_id: user.id
    }

   
  }
  
  render () {
    return (
      <div>
        <RichTextEditor
          value={this.state.value}
          onChange={this.onChange}
        />
        <input type='submit' label='submit' onClick={this.submitEntry} />
      </div>
    );
  }
}

module.exports = Note;
